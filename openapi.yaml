openapi: '3.0.0'
info:
  title: Subscriptions API
  description: API for managing user subscriptions to various services.
  version: '1.0.0'
servers:
  - url: https://services.com
    description: 'https сервер'
  - url: http://localhost:8080
    description: 'Тестовый сервер'
tags:
  - name: subscriptions
    description: Операции над подписками

paths:
  /subscriptions/cost:
    get:
      tags:
        - subscriptions
      summary: Get subscription cost
      description: Retrieve the cost of  each subscription service and the total cost of all subscriptions for the time interval.
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
            description: Start date of the period to calculate costs.
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date
            description: End date of the period to calculate costs.
      responses:
        '200':
          description: Cost of subscriptions retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_cost:
                    type: number
                    format: integer
                    description: Total cost of all subscriptions for the specified period.
                  subscriptions:
                    type: array
                    description: List of individual subscription costs.
                    maxItems: 20
                    items:
                      type: object
                      properties:
                        service_name:
                          type: string
                          description: Name of the subscription service.
                        cost:
                          type: number
                          format: integer
                          description: Cost of the subscription service for the specified period.
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating what went wrong.

  /subscriptions/{user_id}:
    get:
      tags:
        - subscriptions
      summary: List all subscriptions
      description: Retrieve a list of all user subscriptions.
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of subscriptions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    maxItems: 20
                    items:
                      $ref: '#/components/schemas/Subscription'
                  meta:
                    type: object
                    properties:
                      page_size:
                        type: integer
                        description: The number of items on the current page.
                      page:
                        type: integer
                        description: The current page number.

  /subscription:
    post:
      summary: Create a subscription
      description: Create a new subscription for a user.
      tags:
        - subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '201':
          description: Subscription created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid input data.
  
  /subscription/{user_id}/{service_name}:
    get:
      tags:
        - subscriptions
      summary: Get a subscription
      description: Retrieve a specific user subscription by service name and user ID.
      parameters:
        - name: service_name
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A subscription object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          description: Subscription not found.
    put:
      summary: Update a subscription
      description: Update an existing subscription for a user.
      tags:
        - subscriptions
      parameters:
        - name: service_name
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '200':
          description: Subscription updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          description: Subscription not found.
    delete:
      summary: Delete a subscription
      description: Delete a specific user subscription by service name and user ID.
      tags:
        - subscriptions
      parameters:
        - name: service_name
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Subscription deleted successfully.
        '404':
          description: Subscription not found.
components:
  schemas:
    Subscription:
      type: object
      properties:
        service_name:
          type: string
          description: Name of the subscription service.
        user_id:
          type: string
          description: Unique identifier for the user in UUID format.
        start_date:
          type: string
          format: date-time
          description: Start date of the subscription.
        end_date:
          type: string
          format: date-time
          description: End date of the subscription, if applicable.
      required:
        - service_name
        - user_id
        - start_date
      example:
        service_name: Yandex Plus
        user_id: 123e4567-e89b-12d3-a456-426614174000
        start_date: '2025.07'
        end_date: '2026.07'